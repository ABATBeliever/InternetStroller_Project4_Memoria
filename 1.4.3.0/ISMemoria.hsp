#packopt version "def.ini"
#packopt icon "image.ico"
#pack "dll.pak"
#pack "html.pak"
#pack "conf_j.pak"
#pack "conf_e.pak"

//====================================================================================
// □---------------------------□
//  | Internet Stroller Memoria |
// □---------------------------□
// Copyright(C) ABATBeliever 2021-2023
// Website:"https:/abatbeliever.github.io/InternetStroller/"
//
// <How to Build>
// 1:Download HSP3.6
//  From : https://hsp.tv/idman/download.html
// 2:Open Soursefile (sourse.hsp)
// 3:For debugging purposes, Variables can be changed as follows.
//  BypassCheckSum="0" → BypassCheckSum="1"
//  (At Main build time, Variables must be returned as follows.)
// 4:Build
//  HSP(P)→実行ファイル自動作成(A)
//====================================================================================
// <Q&A>
//・Can't Build
//→Is def.dll in the same path?
//→Is image.ico in the same path?
//・"err create.env..."
//→Is "WebView2Runtime" installed?
//・Startup failed
//→Please ReBuild.(HSP Error)
// If you have a problem,please send issue to Github
//
// Internet Stroller Memoria
// Copyright(C) ABATBeliever 2021-2023
//====================================================================================

//TEXTNAMESETTING
ISNAME="InternetStroller Memoria "
ISDeepVersion="Stable"
ISVersion=ISDeepVersion+" Ver 1.4.3.0"
ISCommonVer="3143"
ISBuildNumber="3.143.558.0"
ISBuildDay="2023/10/18"
developer="ABATBeliever"
CompatibleStart="no"
BrowserPush="no"
mana="notyet"
ver_about="no"
funcmanager="no"
iswindow_exitcode="false"
darkmode_change="false"

nowday=""+gettime(1)+gettime(3)
ISold=int("0")+gettime(0)-int("2021")
if nowday="114" {dialog "Today is InternetStroller's "+ISOld+" years old birthday!\nThe first IS (Unlabeled 1.0.0) was launched on January 14, 2021!\n\n今日はInternetStrollerの "+ISOld+" 歳の誕生日！\n初代IS (無印1.0.0) は2021/1/14にリリースされました。",0,"Nofitication from ISMemoria - ISMemoriaからの重要なお知らせ\n"}
if sysinfo(33) > "98" {dialog "No memory - 98% or more"}
if sysinfo(33) > "80" {dialog "It seems that the PC memory is already quite used.\n("+sysinfo(33)+"% of total capacity.) \nIt is recommended to close programs that are not in use.\n\nPCのメモリが既にかなり使われているようです(総容量の"+sysinfo(33)+"%)。\n使わないプログラムを閉じることを推奨します。"}

title ISNAME+ISVersion+" - Initial Variable"
screen 0, 1200,600
Mode="Normal"

//□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□
BypassCheckSum="0"
//□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□

#include "shell32.as"

*inifile
 title ISNAME+ISVersion+" - conf.ini"
 exist dirinfo(1) + "\\conf.ini"
 conf_lang=""
 if strsize = -1 {
 dialog "conf.ini doesn't exist or cannot be read.\nCreate conf.ini from scratch.\nWhat language do you want?\nEnglish(Y)/Japanese(N)\n\nconf.iniが存在しないか、読み込めなかったので設定を新しく作ります。\n言語はどうしますか? 英語(Y)/日本語(N)", 3, "conf.ini Select - English/Japanese"
 conf_lang=stat
 }
 if conf_lang="6" {bcopy "conf_e.pak",""+dir_cur+"\\conf.ini"}
 if conf_lang="7" {bcopy "conf_j.pak",""+dir_cur+"\\conf.ini"}

gosub *Load_inifile
goto *continue1

*Load_inifile
title ISNAME+ISVersion+" - reading..."
notesel iniLoadALL
noteload "conf.ini"
noteget VARIABLE_CONF_INIFILEVER, 1
if int(VARIABLE_CONF_INIFILEVER) < 6 {dialog "conf.ini is old Version.\nCreate from scratch.\n\nconf.iniが古いため、新しく作ります":gosub *CMD_FUNC_CONFDEL : gosub *Load_inifile}
if int(VARIABLE_CONF_INIFILEVER) > 6 {dialog "conf.ini is unknown Version or can't load.\nCreate fromscratch.\n\nconf.iniがｻﾎﾟｰﾄされないﾊﾞｰｼﾞｮﾝもしくは破損しています。新しく作ります。":gosub *CMD_FUNC_CONFDEL : gosub *Load_inifile}
noteget VARIABLE_CONF_INIFILEWRITER, 4
noteget VARIABLE_CONF_INIFILELANGUAGE, 5
noteget VARIABLE_CONF_INIFILEDAY, 6
noteget VARIABLE_CONF_FAVORITE1, 10
noteget VARIABLE_CONF_FAVORITE2, 11
noteget VARIABLE_CONF_FAVORITE3, 12
noteget VARIABLE_CONF_WINDOW_POS_X, 15
noteget VARIABLE_CONF_WINDOW_POS_Y, 16
noteget VARIABLE_CONF_WINDOW_POS_3, 17
noteget VARIABLE_CONF_WINDOW_POS_4, 18
noteget VARIABLE_CONF_WINDOW_COLOR, 19
VARIABLE_CONF_WINDOW_COLOR=int(VARIABLE_CONF_WINDOW_COLOR)
if VARIABLE_CONF_WINDOW_POS_3 = "notyet" {VARIABLE_CONF_WINDOW_POS_3=(ginfo(20) - ginfo(10)) / 2}
if VARIABLE_CONF_WINDOW_POS_4 = "notyet" {VARIABLE_CONF_WINDOW_POS_4=(ginfo(21) - ginfo(11)) / 2}
noteget VARIABLE_CONF_URL_SEARCH, 20
noteget VARIABLE_CONF_URL_BROWSERUPDATE, 21
noteget VARIABLE_CONF_ANIMATION, 22
VARIABLE_CONF_ANIMATION=int(VARIABLE_CONF_ANIMATION)
noteget VARIABLE_CONF_TEXT_SENDBACK, 28
noteget VARIABLE_CONF_TEXT_SENDFORWARD, 29
noteget VARIABLE_CONF_TEXT_SENDRELOAD, 30
noteget VARIABLE_CONF_TEXT_NAVIGATE, 31
noteget VARIABLE_CONF_TEXT_NEWTAB, 32
noteget VARIABLE_CONF_TEXT_CLONETAB, 33
noteget VARIABLE_CONF_TEXT_DELETETAB, 34
noteget VARIABLE_CONF_TEXT_CAPUTURE, 35
noteget VARIABLE_CONF_TEXT_ISCOMPATIBLE, 36
noteget VARIABLE_CONF_TEXT_SENDURL, 37
noteget VARIABLE_CONF_TEXT_ISABOUT, 38
noteget VARIABLE_CONF_TEXT_LOCAL, 39
noteget VARIABLE_CONF_TEXT_ATENE_NAME, 40
noteget VARIABLE_CONF_TEXT_DOWNLOADS, 41
noteget VARIABLE_CONF_TEXT_CLOSE, 43
noteget VARIABLE_CONF_TEXT_ISCOMPATIBLE_TEXT, 44
noteget VARIABLE_CONF_TEXT_ISCOMPATIBLE_WOW, 45
noteget VARIABLE_CONF_TEXT_ISCOMPATIBLE_RELOAD, 46
noteget VARIABLE_CONF_TEXT_ISCOMPATIBLE_FORWARD, 47
noteget VARIABLE_CONF_TEXT_ISCOMPATIBLE_BACK, 48
noteget VARIABLE_CONF_TEXT_ISCOMPATIBLE_EXIT, 49
noteget VARIABLE_CONF_TEXT_INICONFIG, 50
noteget VARIABLE_CONF_TEXT_ATENE_URL, 51
noteget VARIABLE_CONF_TEXT_ATENE_SEARCHURL, 52
noteget VARIABLE_CONF_TEXT_ATENE_CLOSE, 53
noteget VARIABLE_CONF_TEXT_ATENE_NAMEclose, 54
noteget VARIABLE_CONF_TEXT_UPDATE, 55
noteget VARIABLE_CONF_TEXT_HISTORY, 56
noteget VARIABLE_CONF_TEXT_FUNCTION, 57
noteget VARIABLE_CONF_TEXT_FUNCTION_NAME, 58
return

*continue1
width int(VARIABLE_CONF_WINDOW_POS_X), int(VARIABLE_CONF_WINDOW_POS_Y), int(VARIABLE_CONF_WINDOW_POS_3), int(VARIABLE_CONF_WINDOW_POS_4)

if dir_cmdline = "compatible" {OS = "ManualCaution("+sysinfo(0)+")":goto *CompatibleCaution}
if dir_cmdline = "delconf" {gosub *CMD_FUNC_CONFDEL:end}
if dir_cmdline = "delhtm" {gosub *CMD_FUNC_INDEXDEL:end}

if BypassCheckSum = "1" {dialog "Bypass CheckSum"}
if BypassCheckSum = "0" {
//OSVerUnderstanding
 title ISNAME+ISVersion+" - Understanding OS Ver
 //Legacy
 if sysinfo(0) = "WindowsNT ver5.0" {OS = "Windows 2000":goto *CompatibleCaution}
 if sysinfo(0) = "WindowsNT ver5.1" {OS = "Windows XP":goto *CompatibleCaution}
 if sysinfo(0) = "WindowsNT ver5.2" {OS = "Windows Server2003/ReactOS":goto *CompatibleCaution}
 if sysinfo(0) = "WindowsNT ver6.0" {OS = "Windows Vista/Server2008":goto *CompatibleCaution}
 if sysinfo(0) = "WindowsNT ver6.1" {OS = "Windows 7":goto *CompatibleCaution}
 if sysinfo(0) = "WindowsNT ver6.2" {OS = "Windows 8":goto *CompatibleCaution}
 if sysinfo(0) = "WindowsNT ver6.3" {OS = "Windows 8.1":goto *CompatibleCaution}
 //New
 if sysinfo(0) = "WindowsNT ver10.0" {goto *dllfile}
 if sysinfo(0) = "WindowsNT ver11.0" {goto *dllfile}
 dialog "UNKNOWN OS"
 goto *dllfile

*CompatibleCaution
dialog "WebView doesn't support ["+OS+"]\nContinue(Y)/IE7Compatible(N)",2
if stat = "7" {
gsel 0,-1
compatiblefasturl="www.google.com"
screen 1, 800, 350, 4
Mode="Legacy"
goto *Compatible2
}
goto *dllfile

*dllfile
//Dllfile found
 title ISNAME+ISVersion+" - FileChecksum1"
 exist dirinfo(1) + "\\WebView2Loader.dll"
 if strsize = -1 {bcopy "dll.pak",""+dir_cur+"\\WebView2Loader.dll"}
 
 exist dirinfo(1) + "\\index.htm"
 if strsize = -1 {bcopy "html.pak",""+dir_cur+"\\index.htm"}

}
redraw 0

#include "shell32.as"
#include "hspinet.as"
#include "mod_stbar.as"

#define ctype LOWORD(%1) (%1 & $FFFF)
#define ctype HIWORD(%1) (%1 >> 16 & $FFFF)

#uselib "dwmapi.dll"
#func DwmSetWindowAttribute "DwmSetWindowAttribute" sptr,sptr,var,sptr
#define DWMWA_USE_IMMERSIVE_DARK_MODE 20

//include(IS_WebView_mod.dll)
#ifndef MOD_WEBVIEW2_HSP_
#define global MOD_WEBVIEW2_HSP_
#include "user32.as"
#include "kernel32.as"
#ifndef CreateEventExA
#func global CreateEventEx "CreateEventExA" int,int,int,int
#endif // CreateEventExA
#include "ole32.as"
#ifndef SHCreateStreamOnFileEx
#uselib "Shlwapi.dll"
#func global SHCreateStreamOnFileEx "SHCreateStreamOnFileEx" wptr,int,int,int,int,var
#endif // SHCreateStreamOnFileEx
#uselib "combase.dll"
#func global WindowsCreateString       "WindowsCreateString"       wptr,int,var
#func global WindowsDeleteString       "WindowsDeleteString"       int
#func global WindowsGetStringRawBuffer "WindowsGetStringRawBuffer" int,var
#uselib "WebView2Loader.dll"
#func global CreateCoreWebView2EnvironmentWithOptions     "CreateCoreWebView2EnvironmentWithOptions"     wptr,wptr,var,var
#func global CreateCoreWebView2Environment                "CreateCoreWebView2Environment"                int
#func global GetAvailableCoreWebView2BrowserVersionString "GetAvailableCoreWebView2BrowserVersionString" wptr,var
#func global CompareBrowserVersions                       "CompareBrowserVersions"                       wptr,wptr,var
#enum global WV2_EVENT_CAPTURE = 0
#enum global WV2_EVENT_FULLSCREEN
#enum global WV2_EVENT_CREATECTRL
#enum global WV2_EVENT_CREATEENV
#enum global WV2_EVENT_TITLECHANGED
#enum global WV2_EVENT_EXECUTESCRIPT
#enum global WV2_EVENT_NAVIGATIONCOMPLETED
#enum global WV2_EVENT_NAVIGATIONSTARTING
#enum global WV2_EVENT_NEWWINDOW
#enum global WV2_EVENT_PRINTTOPDF
#enum global WV2_EVENT_SOURCECHANGED
#enum global WV2_EVENT_WINDOWCLOSE
#enum global WV2_EVENT_MAX
#enum global WV2_DATA_PT = 0
#enum global WV2_DATA_VT
#enum global WV2_DATA_WP
#enum global WV2_DATA_LP
#enum global WV2_DATA_HWND
#enum global WV2_DATA_EVENT
#enum global WV2_DATA_TOKENL
#enum global WV2_DATA_TOKENH
#enum global WV2_DATA_SIZE
#ifndef MOD_COMCALL_HSP_
#define global MOD_COMCALL_HSP_
#module mod_ComCall
#deffunc ComCall_Init
	if ( codeComCall ){ return }
	dim prm, 3
	dim prm2, 4
	dim codeComCall, 10
	codeComCall(0) = $8bec8b55, $4d8b1045, $ff03eb14, $7d498834, $084d8bfa, $8b018b51, $048b0c55, $c9d0ff90
	codeComCall(8) = $000000c3
	fCCall = varptr(codeComCall)
	VirtualProtect varptr(codeComCall), length(codeComCall) * 4, 0x40, varptr(p1)
	return
#defcfunc CCall int this_, int id_, array prm_, int prms_
	if ( this_ == 0 ){ return 0 }
	prm = this_, id_, varptr(prm_), prms_
	return callfunc(prm, fCCall, 4)
#defcfunc CCall2 int this_, int id_, int prms_, int p1_, int p2_, int p3_, int p4_
	if ( prms_ != 0 ){
		if ( prms_ == 1 ){ prm2 = p1_ }
		else {
		if ( prms_ == 2 ){ prm2 = p1_, p2_ }
		else {
		if ( prms_ == 3 ){ prm2 = p1_, p2_, p3_ }
		else {
		if ( prms_ == 4 ){ prm2 = p1_, p2_, p3_, p4_ }
		}}}
	}
	return CCall(this_, id_, prm2, prms_)
#global
	ComCall_Init
#endif
#module mod_WebView2
#deffunc WebView2_Init
	if ( codeEH ){ return }
	dim codeEH, 139
	codeEH(  0) = $004002b8, $000cc280
	codeEH(  2) = $04c2c033, $00000000
	codeEH(  4) = $04c2c033, $00000000
	codeEH(  6) = $08244c8b, $24748b56, $7c8b5708, $7e831424, $4e89000c, $087e8904, $51571d74, $c71076ff
	codeEH( 14) = $aa1c2444, $ffaaaaaa, $448b0c76, $d0ff2024, $5ec0335f, $85000cc2, $8b0674c9, $50ff5101
	codeEH( 22) = $74ff8504, $57078b06, $ff0450ff, $44c71076, $bbbb1424, $448bbbbb, $d0ff1424, $1046c75f
	codeEH( 30) = $00000000, $c25ec033, $0000000c
	codeEH( 33) = $0824448b, $5575c085, $0c244c8b, $24748b56, $04468908, $39084e89, $1c740c46, $76ff5051
	codeEH( 41) = $2444c710, $aaaaaa18, $0c76ffaa, $1c24448b, $c033d0ff, $000cc25e, $0674c985, $ff51018b
	codeEH( 49) = $76ff0450, $2444c710, $bbbbbb10, $24448bbb, $c7d0ff10, $00001046, $c0330000, $000cc25e
	codeEH( 57) = $5c8b5351, $8b571024, $8310247c, $89000c7f, $2574045f, $18244c8b, $77ff5351, $084f8910
	codeEH( 65) = $c70c77ff, $aa282444, $8baaaaaa, $ff28244c, $c38b5fd1, $0cc2595b, $24448d00, $2444c714
	codeEH( 73) = $cccccc10, $74ff50cc, $44c71c24, $dddd1024, $448bdddd, $44c71824, $00001c24, $d0ff0000
	codeEH( 81) = $2474ff50, $24448b20, $ffd0ff14, $c9331077, $440fc085, $8918244c, $44c7084f, $bbbb1c24
	codeEH( 89) = $448bbbbb, $d0ff1c24, $001047c7, $8b000000, $595b5fc3, $00000cc2
	codeEH( 95) = $0c24448b, $24748b56, $7c8b5708, $7e831024, $7e89000c, $08468904, $57501d74, $c71076ff
	codeEH(103) = $aa1c2444, $ffaaaaaa, $4c8b0c76, $d1ff2024, $5e5fc78b, $ff000cc2, $44c71076, $bbbb1424
	codeEH(111) = $448bbbbb, $d0ff1424, $46c7c78b, $00000010, $c25e5f00, $0000000c
	codeEH(117) = $24748b56, $7c8b5708, $7e831024, $7e89000c, $0846c704, $00000000, $006a1e74, $1076ff57
	codeEH(125) = $1c2444c7, $aaaaaaaa, $8b0c76ff, $ff20244c, $5fc78bd1, $0008c25e, $c71076ff, $bb142444
	codeEH(133) = $8bbbbbbb, $ff142444, $c7c78bd0, $00001046, $5e5f0000, $000008c2
	dim aTmp, 8
	p1 = varptr(SendMessageA) : aTmp = 59, 169, 267, 415, 504
	repeat 5 : lpoke codeEH, aTmp(cnt), p1 : loop
	p1 = varptr(CloseHandle) : aTmp = 106, 205, 354, 442, 531
	repeat 5 : lpoke codeEH, aTmp(cnt), p1 : loop
	lpoke codeEH, 293, varptr(lstrlenW)
	lpoke codeEH, 306, varptr(WindowsCreateString)
	vtHdlIxI = varptr(codeEH(0)), varptr(codeEH(2)), varptr(codeEH(4)), varptr(codeEH(6))
	vtHdlHxI = varptr(codeEH(0)), varptr(codeEH(2)), varptr(codeEH(4)), varptr(codeEH(33))
	vtHdlHxW = varptr(codeEH(0)), varptr(codeEH(2)), varptr(codeEH(4)), varptr(codeEH(57))
	vtHdlHxB = varptr(codeEH(0)), varptr(codeEH(2)), varptr(codeEH(4)), varptr(codeEH(95))
	vtHdlH   = varptr(codeEH(0)), varptr(codeEH(2)), varptr(codeEH(4)), varptr(codeEH(117))
	vtHdl = varptr(vtHdlIxI), varptr(vtHdlHxI), varptr(vtHdlHxW), varptr(vtHdlHxB), varptr(vtHdlH)
	VirtualProtect varptr(codeEH), length(codeEH) * 4, 0x40, varptr(p1)
	dim eVT, WV2_MAXHDL
	eVT(0)  = 4, 0, 1, 1, 0, 2, 0, 0, 0, 3, 0, 0
	return
#deffunc WebView2_EventInit int enumEvent, int hWnd_, int nMsg, array aData
	aData(WV2_DATA_PT) = varptr(aData(WV2_DATA_VT))
	aData(WV2_DATA_VT) = vtHdl(eVT(enumEvent))
	aData(WV2_DATA_EVENT) = enumEvent
	if ( hWnd_ ){
		aData(WV2_DATA_HWND) = hWnd_
		aData(WV2_DATA_EVENT) = nMsg
	}
	else {
		CreateEventEx 0, 0, 0, 0x1F0003
		p1 = stat
		if ( p1 == 0 ){ return 0 }
		aData(WV2_DATA_EVENT) = p1
		aData(WV2_DATA_HWND) = 0
	}
	return
#deffunc WebView2_EventWait array aData
	if ( aData(WV2_DATA_EVENT) == 0 ){ return 0 }
	repeat
		WaitForSingleObject aData(WV2_DATA_EVENT), 100
		if ( stat == 0 || stat != 0x102 ){ break }
		await 10
	loop
	return 1
#deffunc WebView2_AddRef int pv
	return CCall2(pv, 1, 0)
#deffunc WebView2_Release int pv
	return CCall2(pv, 2, 0)
#defcfunc WebView2_CreateEnv
	dim aEnv, WV2_DATA_SIZE
	WebView2_EventInit WV2_EVENT_CREATEENV, 0, 0, aEnv
	ret = 0
	CreateCoreWebView2Environment aEnv
	if ( stat == 0 ){
		WebView2_EventWait aEnv
		if ( aEnv(WV2_DATA_WP) == 0 && aEnv(WV2_DATA_LP) != 0 ){ ret = 1 }
	}
	if ( ret == 0 ){ return 0 }
	return aEnv(WV2_DATA_LP)
#defcfunc WebView2_CreateCtrl int pEnv, int hWnd_
	dim aCtrl, WV2_DATA_SIZE
	WebView2_EventInit WV2_EVENT_CREATECTRL, 0, 0, aCtrl
	ret = 0
	if ( CCall2(pEnv, 3, 2, hWnd_, aCtrl) == 0 ){
		WebView2_EventWait aCtrl
		if ( aCtrl(WV2_DATA_WP) == 0 && aCtrl(WV2_DATA_LP) != 0 ){ ret = 1 }
	}
	if ( ret == 0 ){ return 0 }
	return aCtrl(WV2_DATA_LP)

#defcfunc WebView2_GetView int pCtrl
	if ( CCall2(pCtrl, 25, 1, varptr(p1)) ){ return 0 }
	return p1
#deffunc WebView2_Size int pCtrl, int x, int y, int w, int h
	if ( CCall2(pCtrl, 6, 4, x, y, w, h) ){ return 0 }
	return 1
#deffunc WebView2_Navigate int pView, str sUrl
	sdim bufTmp, (strlen(sUrl) + 1) * 2
	cnvstow bufTmp, sUrl
	if ( CCall2(pView, 5, 1, varptr(bufTmp)) ){ return 0 }
	return 1
#defcfunc WebView2_CnvpWtoS int pWStr, var vBuf
	if ( pWStr == 0 ){ return 0 }
	sdim bufTmp, (lstrlenW(pWStr) + 1) * 2
	lstrcpyW varptr(bufTmp), pWStr
	vBuf = cnvwtos(bufTmp)
	bufTmp = 0
	return 1
#defcfunc WebView2_CnvWinStr int pWinStr, var vBuf
	if ( pWinStr == 0 ){ return 0 }
	WindowsGetStringRawBuffer pWinStr, p1
	p1 = stat
	ret = 1
	if ( WebView2_CnvpWtoS(p1, vBuf) == 0 ){ ret = 0 }
	if ( p1 ){ WindowsDeleteString pWinStr }
	return ret
#defcfunc WebView2_GetMonitorRect int hWnd_, array aRect
	dim pmi, 10 : pmi(0) = 40
	MonitorFromWindow hWnd_, 1
	if ( GetMonitorInfo(stat, varptr(pmi)) == 0 ){ return 0 }
	pmi(3) -= pmi(1) : pmi(4) -= pmi(2)
	dim aRect, 4
	CopyRect varptr(aRect), varptr(pmi(1))
	return 1
#defcfunc WebView2_GetWndRect int hWnd_, array aRect
	dim wndPl, 11 : wndPl(0) = 44
	if ( GetWindowPlacement(hWnd_, varptr(wndPl)) == 0 ){ return 0 }
	dim aRect, 4
	wndPl(9) -= wndPl(7) : wndPl(10) -= wndPl(8)
	CopyRect varptr(aRect), varptr(wndPl(7))
	return 1
#deffunc WebView2_InitWnd int wndID
	mref bmscr, 96 + wndID
	hWndTmp = bmscr(13)
	if ( WebView2_GetMonitorRect(hWndTmp, rcMon) == 0 ){ return 0 }
	if( WebView2_GetWndRect(hWndTmp, rcWnd) == 0 ){ return 0 }
	screen wndID, rcMon(2), rcMon(3), 2, , , rcWnd(2), rcWnd(3)
	GetWindowLong hwnd, -16
	SetWindowLong hwnd, -16, stat | 0x50000
	SetWindowPos hwnd, 0, 0, 0, 0, 0, 0x63
	return 1
#global
WebView2_Init
#endif

#include "hspinet.as"
//WebViewSetting
title ISNAME+ISVersion+" - WebView Setting"
//DefaultURL
DEF_URL = dir_cmdline
if dir_cmdline = "" {DEF_URL = "file://"+dir_exe+"/index.htm"}
DwmSetWindowAttribute hwnd,DWMWA_USE_IMMERSIVE_DARK_MODE,VARIABLE_CONF_WINDOW_COLOR,4

#define global WV2Env_CreateWV2Ctrl           3
#define global WV2Ctrl_put_IsVisible          4
#define global WV2Ctrl_put_Bounds             6
#define global WV2Ctrl_GetParent             21
#define global WV2_PrintToPdf                80
#define global WV2_IsDownloadDialogOpen      90
#define global WV2_OpenDownloadDialog        91
#define global WV2_CloseDownloadDialog       92
#define global WV2NewWnd_get_Uri              3
#define global WV2NewWnd_put_NewWindow        4
#define global WV2NewWnd_put_Handled          6
#define global WV2NewWnd_GetDeferral          9
#define global WV2Deferral_Complete           3
#define global WV2Ctrl_Close                 24
#define global WV2Ctrl_get_CoreWebView2      25
#define global WV2_get_Source                 4
#define global WV2_Navigate                   5
#define global WM_SETFONT  0x0030
#define global TCM_GETITEMCOUNT  0x1304
#define global TCM_GETITEMA      0x1305
#define global TCM_INSERTITEMA   0x1307
#define global WV2_ExecuteScript             29
#define global WV2_CapturePreview            30
#define global WV2_Reload                    31
#define global WV2_get_CanGoBack             38
#define global WV2_get_CanGoForward          39
#define global WV2_get_GoBack                40
#define global WV2_get_GoForward             41
#define global WV2_add_NewWindowRequested    44
#define global WV2_del_NewWindowRequested    45
#define global WV2_add_DocumentTitleChanged  46
#define global WV2_del_DocumentTitleChanged  47
#define global WV2_get_DocumentTitle         48
#define global WV2_add_FullScrChanged        52
#define global TCM_DELETEITEM    0x1308
#define global TCM_GETCURSEL     0x130b
#define global TCM_SETCURSEL     0x130c
#define global TCM_HITTEST       0x130d
#define global TCM_SETITEMW      0x133d
#define global TCM_INSERTITEMW   0x133e
#define global WV2_add_NavigationCompleted   15
#define global WV2_del_NavigationCompleted   16
#define global WV2_del_FullScrChanged        53
#define global WV2_GetFullScreen             54
#define global WV2_OpenTaskManagerWindow     79
#define WS_EX_LAYERED $80000
#define LWA_COLORKEY 1

#enum IDM_ADD1 = 1

//Win32API
title ISNAME+ISVersion+" - CreateAPIMenu"
	font "Consolas", 10
	WebView2_InitWnd 0
	hWnd0 = hwnd
	dim wndInfo, 7
	hMenu = CreateMenu()
//4n
	menuBuf(0) = VARIABLE_CONF_TEXT_SENDBACK, VARIABLE_CONF_TEXT_SENDFORWARD, VARIABLE_CONF_TEXT_SENDRELOAD, VARIABLE_CONF_TEXT_NAVIGATE
	menuBuf(4) = VARIABLE_CONF_TEXT_NEWTAB, VARIABLE_CONF_TEXT_CLONETAB, VARIABLE_CONF_TEXT_DELETETAB, VARIABLE_CONF_TEXT_CAPUTURE
	menuBuf(8) = VARIABLE_CONF_TEXT_SENDURL, VARIABLE_CONF_TEXT_LOCAL, VARIABLE_CONF_TEXT_ATENE_NAME, VARIABLE_CONF_TEXT_DOWNLOADS
	menuBuf(12) = VARIABLE_CONF_TEXT_HISTORY, VARIABLE_CONF_TEXT_FUNCTION+"(F)"
	repeat length(menuBuf)
	title ISNAME+ISVersion+" - WebView2Load"
		InsertMenu hMenu, -1, 0x400, 0x8000 + cnt, menuBuf(cnt)
	loop
	dim mi, 12 : mi = 48, 1 : mi(3) = 3
	SetMenu hWnd0, hMenu
	ldim lbCmd, length(menuBuf)
	lbCmd(0) = *CMD_BACK, *CMD_FORWARD,*CMD_RELOAD, *CMD_NAVIGATE
	lbCmd(4) = *CMD_NEW_TAB, *CMD_CLONE_TAB, *CMD_DEL_TAB, *CMD_CAPTURE
	lbCmd(8) = *Browser_PUSH, *CMD_LOCAL, *CMD_MANAPAD, *CMD_DOWNLOAD
	lbCmd(12) = *CMD_HISTORY, *CMD_FUNC
	CreateWindowExA 0, "edit", 0, 0x56000080, 0, 0, 0, 0, hWnd0, 0, hinstance, 0
	hEditUrl = stat : sendmsg hEditUrl, WM_SETFONT, hFont, 1
	bufTmp = DEF_URL : SetWindowTextA hEditUrl, varptr(bufTmp)
	dim rc, 4 : dim tci, 7 : bAdd = 0 : bDel = 0
	CreateWindowExA 0, "SysTabControl32", 0, 0x56008468, 0, 0, 0, 0, hWnd0, 0, hinstance, 0
	hTab = stat : sendmsg hTab, WM_SETFONT, hFont, 1
	p1 = 0 << 16 : p1 |= 160 : sendmsg hTab, 0x1329, 0, p1
	
	pEnv = WebView2_CreateEnv()
	if ( pEnv == 0 ){ gsel 0, 1 : dialog "WebView Can't Extract!\nLack of authorization or WebView2 runtime does not exist.\n\nIE7 Compatible Mode?",2, "FATAL"
	 if stat = "7" {end}
	 gsel 0,-1
	 compatiblefasturl="www.google.com"
	 screen 1, 800, 350, 4
	 Mode="Legacy"
     goto *Compatible2}
	curCtrl = 0 : curView = 0
	
//path
title ISNAME+ISVersion+" - BrowserPATHreserve"
	oncmd gosub *EVENT_TITLE,    0x9000
	oncmd gosub *EVENT_COMPLETE, 0x9001
	oncmd gosub *EVENT_FULLSCR,  0x9002
	oncmd gosub *EVENT_NEWWND,   0x9003
	oncmd gosub *EVENT_NEWWND2,  0x9004
	oncmd gosub *WM_SIZE,        0x0005
	oncmd gosub *WM_CLOSE,       0x0010
	oncmd gosub *WM_NOTIFY,      0x004E
	oncmd gosub *WM_COMMAND,     0x0111
	title ISNAME+ISVersion+" - FirstTAB-Reserve & WebView"
//FirstTab&WebView
	onexit *ISWindowExit
	dim RECT, 4
	CreatePopupMenu
	hMenu.1 = stat
		AppendMenu hMenu.1, 0, $10, "Send Back"
		AppendMenu hMenu.1, 0, $20, "Send Forward"
		AppendMenu hMenu.1, $800, 0, ""
		AppendMenu hMenu.1, 0, $30, "Delete conf.ini"
		AppendMenu hMenu.1, 0, $40, "Delete index.htm"
		AppendMenu hMenu.1, $800, 0, ""
		AppendMenu hMenu.1, 0, $50, "Taskmgr"
		AppendMenu hMenu.1, 0, $60, "ExecuteScript"
		AppendMenu hMenu.1, $800, 0, ""
		AppendMenu hMenu.1, 0, $70, "Open CompatibleMode of IE7 (Base : ISCompatible)"
		AppendMenu hMenu.1, $800, 0, ""
		AppendMenu hMenu.1, 0, $80, "Open WebView2 URLs"
		AppendMenu hMenu.1, $800, 0, ""
		AppendMenu hMenu.1, 0, $90, "Open Website of 'goo' (Base code here)"
		AppendMenu hMenu.1, 0, $100, "Open Youtube ch of 'アベル&アテネ'"
		AppendMenu hMenu.1, $800, 0, ""
		AppendMenu hMenu.1, 0, $110, "FavoriteWebSite1 (Navigate : "+ VARIABLE_CONF_FAVORITE1 +")"
		AppendMenu hMenu.1, 0, $120, "FavoriteWebSite2 (Navigate : "+ VARIABLE_CONF_FAVORITE2 +")"
		AppendMenu hMenu.1, 0, $130, "FavoriteWebSite3 (Navigate : "+ VARIABLE_CONF_FAVORITE3 +")"
		AppendMenu hMenu.1, $800, 0, ""
		AppendMenu hMenu.1, 0, $140, "DarkMode"
		AppendMenu hMenu.1, $800, 0, ""
		AppendMenu hMenu.1, 0, $990, "Close Browser"
		gosub *TAB_ADD
		title ISNAME+ISVersion+" - Sucsess"
//OK
    title ""
    gsel 0, 1
    stbar_ini
    gosub *WM_STBAR
	oncmd gosub *syscommand, $112
	GetSystemMenu hwnd, 0
	hSystemMenu = stat
	InsertMenu hSystemMenu, 0, $400, IDM_ADD1, "About ISMemoria"
    DEF_URL = "file://"+dir_exe+"/index.htm"
    oncmd gosub *windowcheck, $6
    redraw 1
    gosub *WM_STBAR
    gosub *TAB_UPDATE
	stop

//MENU AND TAB

*MENU_UPDATE
	stbar_resize
	if iswindow_exitcode = "true" {end}
	gosub *EVENT_URL
	mi(1) = 1
	if ( CCall2(dpCtrl(1), WV2_get_CanGoBack, 1, varptr(p1)) == 0 ){
		if ( p1 ){ mi(3) = 0 }
		else { mi(3) = 3 }
	}
	else { mi(3) = 3 }
	SetMenuItemInfo hMenu, 0, 1, varptr(mi)
	if ( CCall2(dpCtrl(1), WV2_get_CanGoForward, 1, varptr(p1)) == 0 ){
		if ( p1 ){ mi(3) = 0 }
		else { mi(3) = 3 }
	}
	else { mi(3) = 3 }
	SetMenuItemInfo hMenu, 1, 1, varptr(mi)
	DrawMenuBar hWnd0
	return

*TAB_GETINFO
	sendmsg hTab, TCM_GETCURSEL, 0, 0 : iTab = stat
	gosub *TAB_GETINFO2
	return

*TAB_GETINFO2
	pTabInfo = 0
	if ( iTab == -1 ){ return }
	tci(0) = 8 : sendmsg hTab, TCM_GETITEMA, iTab, varptr(tci)
	if ( stat == 0 ){ return }
	pTabInfo = tci(6)
	dupptr dpCtrl, WV2_DATA_SIZE * 28 + pTabInfo, 8, 4
	return

*TAB_SELECT
	gosub *TAB_GETINFO
	gosub *EVENT_URL
	if ( pTabInfo == 0 ){ return }
	pView = -1 : gosub *TAB_UPDATE
	gosub *WM_SIZE
	ret = CCall2(dpCtrl, WV2Ctrl_put_IsVisible, 1, 1)
	return

*TAB_UPDATE
	gosub *TAB_GETINFO
	gosub *EVENT_URL
	if ( pTabInfo == 0 ){ return }
	gosub *MENU_UPDATE
	if ( CCall2(dpCtrl(1), WV2_get_DocumentTitle, 1, varptr(p1)) == 0 ){
		if ( pView == -1 || pView == dpCtrl(1) ){ SetWindowTextW hWnd0, p1 }
		tci(0) = 1 : tci(3) = p1
		sendmsg hTab, TCM_SETITEMW, iTab, varptr(tci)
		CoTaskMemFree p1
	}
	if ( pView == -1 || pView == dpCtrl(1) ){
		if ( CCall2(dpCtrl(1), WV2_get_Source, 1, varptr(p1)) == 0 ){
			SetWindowTextW hEditUrl, p1
			CoTaskMemFree p1
		}
	}
	sdim pszText
	sendmsg hwnd, $D, 64, varptr(pszText)
	title ""
	if pszText != "" {title "\" "+str(pszText)+" \" - ISMemoria"}else{title ""}
	gosub *WM_STBAR
	return

*TAB_ADD
	if ( bAdd ){ return }
	bAdd = 1
	gosub *TAB_ADD2
	gosub *EVENT_SET
	gosub *TAB_SELECT
	bufTmp = DEF_URL
	SetWindowTextA hEditUrl, varptr(bufTmp)
	gosub *CMD_NAVIGATE
	bAdd = 0
	return

*TAB_ADD2
	gosub *TAB_GETINFO
	if ( pTabInfo ){
		ret = CCall2(dpCtrl, WV2Ctrl_put_IsVisible, 1, 0)
	}
	sendmsg hTab, TCM_GETITEMCOUNT, 0, 0 : iTab = stat
	tci(0) = 9 : tci(6) = 0
	bufTmp = "" : tci(3) = varptr(bufTmp)
	sendmsg hTab, TCM_INSERTITEMA, iTab, varptr(tci)
	sendmsg hTab, TCM_SETCURSEL, iTab, 0
	curCtrl = WebView2_CreateCtrl(pEnv, hWnd0)
	curView = WebView2_GetView(curCtrl)
	if ( curCtrl == 0 || curView == 0 ){
		gosub *TAB_DEL
		return
	}
	return

*TAB_DEL
	sendmsg hTab, TCM_GETITEMCOUNT, 0, 0
	if ( stat <= 1 ){ return }
	if ( bDel ){ return }
	bDel = 1
	gosub *TAB_GETINFO2
	if ( pTabInfo == 0 ){ return }
	ret = CCall2(dpCtrl(0), WV2Ctrl_Close, 0)
	WebView2_Release dpCtrl(1)
	WebView2_Release dpCtrl(0)
	HeapFree GetProcessHeap(), 0, pTabInfo
	sendmsg hTab, TCM_DELETEITEM, iTab, 0
	if ( iTab ){ iTab-- }
	sendmsg hTab, TCM_SETCURSEL, iTab, 0
	gosub *TAB_SELECT
	bDel = 0
	return

//EVENT

*EVENT_TITLE
	gosub *EVENT_URL
	pView = wparam : gosub *TAB_UPDATE
	return

*EVENT_COMPLETE
	gosub *EVENT_URL
	pView = wparam : gosub *TAB_UPDATE
	return

*EVENT_FULLSCR
	gosub *TAB_GETINFO
	gosub *EVENT_URL
	if ( pTabInfo == 0 ){ return }
	if ( dpCtrl(1) != wparam ){ return }
	if ( CCall2(dpCtrl(1), WV2_GetFullScreen, 1, varptr(p1)) ){ return }
	if ( p1 ){
		ShowWindow hEditUrl, 0
		ShowWindow hTab, 0
		wndInfo(0) = GetWindowLong(hWnd0, -20)
		wndInfo(1) = GetWindowLong(hWnd0, -16)
		wndInfo(2) = GetMenu(hWnd0)
		SetMenu hWnd0, 0
		if ( WebView2_GetWndRect(hWnd0, rc) == 0 ){ return }
		wndInfo(3) = rc(0), rc(1), rc(2), rc(3)
		SetWindowLong hWnd0, -20, 0
		SetWindowLong hWnd0, -16, wndInfo(1) & 0xff000000
		if ( WebView2_GetMonitorRect(hWnd0, rc) == 0 ){ return }
		SetWindowPos hWnd0, -1, rc(0), rc(1), rc(2), rc(3), 0x220
	}
	else {
		ShowWindow hEditUrl, 5
		ShowWindow hTab, 5
		SetWindowLong hWnd0, -20, wndInfo(0)
		SetWindowLong hWnd0, -16, wndInfo(1)
		if ( wndInfo(2) ){ SetMenu hWnd0, wndInfo(2) }
		if ( wndInfo(0) & 0x8 ){ p1 = -1 } else { p1 = -2 }
		SetWindowPos hWnd0, p1, wndInfo(3), wndInfo(4), wndInfo(5), wndInfo(6), 0x220
		ShowWindow hWnd0, 1
	}
	return

*EVENT_NEWWND
	gosub *EVENT_URL
	if ( lparam == 0 || bAdd != 0 ){ return }
	bAdd = 1
	pNewWnd = lparam
	if ( CCall2(pNewWnd, WV2NewWnd_GetDeferral, 1, varptr(pDef)) == 0 ){
		PostMessage hWnd0, 0x9004, 0, 0
		bAdd = 1
	}
	return

*EVENT_NEWWND2
	gosub *EVENT_URL
	if ( CCall2(pNewWnd, WV2NewWnd_put_Handled, 1, 1) == 0 ){
		if ( CCall2(pNewWnd, WV2NewWnd_get_Uri, 1, varptr(p1)) == 0 ){
			gosub *TAB_ADD2
			ret = CCall2(pNewWnd, WV2NewWnd_put_NewWindow, 1, curView)
			gosub *EVENT_SET
			gosub *TAB_SELECT
		}
	}
	ret = CCall2(pDef, WV2Deferral_Complete, 0)
	WebView2_Release pDef
	bAdd = 0
	return

*EVENT_SET
	pTabInfo = 0
	pTabInfo = HeapAlloc(GetProcessHeap(), 8, WV2_DATA_SIZE * 28 + 8)
	if ( pTabInfo == 0 ){ return }
	dupptr dp, pTabInfo, WV2_DATA_SIZE * 4, 4
	WebView2_EventInit WV2_EVENT_TITLECHANGED, hWnd0, 0x9000, dp
	ret = CCall2(curView, WV2_add_DocumentTitleChanged, 2, dp, varptr(dp(6)))

	dupptr dp, WV2_DATA_SIZE * 4 + pTabInfo, WV2_DATA_SIZE * 4, 4
	WebView2_EventInit WV2_EVENT_NAVIGATIONCOMPLETED, hWnd0, 0x9001, dp
	ret = CCall2(curView, WV2_add_NavigationCompleted, 2, dp, varptr(dp(6)))

	dupptr dp, WV2_DATA_SIZE * 8 + pTabInfo, WV2_DATA_SIZE * 4, 4
	WebView2_EventInit WV2_EVENT_FULLSCREEN, hWnd0, 0x9002, dp
	ret = CCall2(curView, WV2_add_FullScrChanged, 2, dp, varptr(dp(6)))

	dupptr dp, WV2_DATA_SIZE * 12 + pTabInfo, WV2_DATA_SIZE * 4, 4
	WebView2_EventInit WV2_EVENT_NEWWINDOW, hWnd0, 0x9003, dp
	ret = CCall2(curView, WV2_add_NewWindowRequested, 2, dp, varptr(dp(6)))

	dupptr dpCtrl, WV2_DATA_SIZE * 28 + pTabInfo, 8, 4
	dpCtrl(0) = curCtrl, curView

	tci(0) = 8 : tci(6) = pTabInfo
	sendmsg hTab, TCM_SETITEMW, iTab, varptr(tci)
	return

*EVENT_URL
	if ( pTabInfo == 0 ){ return }
	p1 = (GetWindowTextLengthW(hEditUrl) + 1) * 2
	sdim bufTmp, p1
	GetWindowText hEditUrl, varptr(bufTmp), p1
	urlTmp = bufTmp
	if urlTmp = "is://webview" {dialog "WebView2 Runtime :\n" + dirinfo(0), 0, ISNAME : return}
	return

*windowcheck
	if iswindow_exitcode = "true" {end}
	if LOWORD(wparam)="1" {gosub *WM_STBAR:gosub *TAB_UPDATE}
	if LOWORD(wparam)="2" {gosub *WM_STBAR:gosub *TAB_UPDATE}
	stbar_ini
	return

//WIN32UI_CMD

*CMD_BACK
	gosub *TAB_GETINFO
	gosub *EVENT_URL
	if ( pTabInfo ){ ret = CCall2(dpCtrl(1), WV2_get_GoBack, 0) }
	return

*CMD_FORWARD
	gosub *TAB_GETINFO
	gosub *EVENT_URL
	if ( pTabInfo ){ ret = CCall2(dpCtrl(1), WV2_get_GoForward, 0) }
	return

*CMD_RELOAD
	gosub *TAB_GETINFO
	gosub *EVENT_URL
	if ( pTabInfo ){ ret = CCall2(dpCtrl(1), WV2_Reload, 0) }
	return

*CMD_NAVIGATE
	gosub *TAB_GETINFO
	gosub *EVENT_URL
	GetWindowTextW hEditUrl, varptr(bufTmp), p1
	ret = CCall2(dpCtrl(1), WV2_Navigate, 1, varptr(bufTmp))
	return
	
*CMD_NEW_TAB
	gosub *TAB_ADD
	return

*CMD_CLONE_TAB
	gosub *EVENT_URL
	if ( pTabInfo == 0 ){ return }
	p1 = (GetWindowTextLengthW(hEditUrl) + 1) * 2
	sdim bufTmp, p1
	GetWindowText hEditUrl, varptr(bufTmp), p1
	NOW_DEF_URL = DEF_URL
	DEF_URL = bufTmp
	gosub *TAB_ADD
	DEF_URL = NOW_DEF_URL
	return

*CMD_DEL_TAB
	gosub *TAB_DEL
	return

*CMD_ABOUT
	gosub *EVENT_URL
	ver_about="use"
	screen 4, 500, 300, 4
	gsel 4,2
	DwmSetWindowAttribute hwnd,DWMWA_USE_IMMERSIVE_DARK_MODE,VARIABLE_CONF_WINDOW_COLOR,4
	title "About InternetStroller"
	GetWindowLong hwnd, -16
	SetWindowLong hwnd, -16, stat - $20000
	SetWindowLong hwnd, -16, stat - $80000
	about_text="ABATBeliever "+ISNAME+ISVersion+"\nBuild : "+ISBuildNumber+" ("+ISBuildDay+")\n\nCopyright (C) 2021-2023 ABATBeliever. All rights reserved.\n\nhttps://abatbeliever.github.io/InternetStroller/\n\n"
	about_text=about_text+"==============================\n"+sysinfo(0)+"\nUser: "+sysinfo(1)+"\nNetwork-PCName: "+sysinfo(2)+"\nMemory Utilization: "+sysinfo(33)+"%\n=============================="
	if sysinfo(33) > "80" {about_text=about_text+"\n\nIt seems that the PC memory is already quite used. ("+sysinfo(33)+"% of total capacity.) \nIt is recommended to close programs that are not in use.\nPCのメモリが既にかなり使われているようです(総容量の"+sysinfo(33)+"%)。\n使わないプログラムを閉じることを推奨します。"}
	about_text=about_text+"\n\n<<ﾗｲｾﾝｽ>>\n1:InternetStrollerMemoriaはABATBelieverの個人開発品です。\n2:このｿﾌﾄで発生したいかなる問題についても、ABATBelieverは責任を免責されるものとします。\n3:もしもISのﾗｲｾﾝｽが変更されたとしても、このﾗｲｾﾝｽのみがこのﾊﾞｰｼﾞｮﾝでは有効です\n4:'WebView2'ｴﾝｼﾞﾝが使用されています。 そのﾗｲｾﾝｽは下部に記載されています\n5:'mod_WebView2_10115038.hsp'が含まれていますが、これはgooから提供されました。\n6:ｿﾌﾄの再配布や改造については、BSDﾗｲｾﾝｽが使用されます。"
	about_text=about_text+"\n\n<<WebView2Loader2>>\nCopyright (C) Microsoft Corporation. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are\nmet:\n* Redistributions of source code must retain the above copyright\nnotice, this list of conditions and the following disclaimer.\n* Redistributions in binary form must reproduce the above"
	about_text=about_text+"\ncopyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n* The name of Microsoft Corporation, or the names of its contributors "
	about_text=about_text+"may not be used to endorse or promote products derived from this software without specific prior written permission.\n\n"
	about_text=about_text+"THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n'AS IS' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
	about_text=about_text+"\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT"
	about_text=about_text+"(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
	mesbox about_text, 500, 270, 0, 0
	pos 210,270:button gosub VARIABLE_CONF_TEXT_CLOSE,*CMD_ABOUT_2
	DwmSetWindowAttribute hwnd,DWMWA_USE_IMMERSIVE_DARK_MODE,VARIABLE_CONF_WINDOW_COLOR,4
	return
	
*CMD_ABOUT_2
	ver_about="unuse"
	gsel 4,-1
	return

*CMD_UPDATE
	if ISDeepVersion!="Stable" {dialog "This is Beta Build of "+ISNAME+"- "+ISVersion : return}
	NOW_DEF_URL = DEF_URL
	DEF_URL = VARIABLE_CONF_URL_BROWSERUPDATE+ISCommonVer
	gosub *TAB_ADD
	DEF_URL = NOW_DEF_URL
	return
	
*CMD_CAPTURE
	gosub *EVENT_URL
	dialog "PNG(Y) / PDF(N)",3,""
	if stat = 6 {gosub *CMD_CAPTURE1}else{gosub *CMD_CAPTURE2}
	return

*CMD_CAPTURE1
	dialog "png", 17
	if ( stat == 0 ){ return }
	if ( SHCreateStreamOnFileEx(refstr, 0x1002, 0x80, 1, 0, p1) ){ return }
	gosub *TAB_GETINFO
	if ( pTabInfo == 0 ){ return }
	dupptr dp, WV2_DATA_SIZE * 20 + pTabInfo, WV2_DATA_SIZE * 4, 4
	WebView2_EventInit WV2_EVENT_CAPTURE, hWnd0, 0, dp
	ret = CCall2(dpCtrl(1), WV2_CapturePreview, 3, 0, p1, dp)
	WebView2_EventWait dp
	WebView2_Release p1
	dialog "Captured", 1, "ISMemoria Capture Service"
	return

*CMD_CAPTURE2
	if ( bPDF ){ return }
	dialog "pdf", 17
	if ( stat == 0 ){ return }
	gosub *TAB_GETINFO
	if ( pTabInfo == 0 ){ return }
	bPDF = 1
	mi(1) = 1 : mi(3) = 3
	dupptr dp, WV2_DATA_SIZE * 24 + pTabInfo, WV2_DATA_SIZE * 4, 4
	WebView2_EventInit WV2_EVENT_PRINTTOPDF, hWnd0, 0x9005, dp
	sdim bufTmp, (strlen(refstr) + 1) * 2
	cnvstow bufTmp, refstr
	ret = CCall2(dpCtrl(1), WV2_PrintToPdf, 3, varptr(bufTmp), 0, dp)
	dialog "Captured", 1, "ISMemoria Capture Service"
	return

*CMD_INICONF
	dialog "File : "+dirinfo(1)+"\\conf.ini\n\nVersion "+VARIABLE_CONF_INIFILEVER+"\nWriter : "+VARIABLE_CONF_INIFILEWRITER+"\nLanguage : "+VARIABLE_CONF_INIFILELANGUAGE+"\nMade in : "+VARIABLE_CONF_INIFILEDAY
	return
	
*CMD_DOWNLOAD
	gosub *TAB_GETINFO
	if ( pTabInfo == 0 ){ return }
	if ( CCall2(dpCtrl(1), WV2_IsDownloadDialogOpen, 1, varptr(p1)) ){ return }
	if ( p1 ){ p1 = WV2_CloseDownloadDialog } else { p1 = WV2_OpenDownloadDialog }
	ret = CCall2(dpCtrl(1), p1, 0)
	return

*CMD_LOCAL
	gosub *TAB_GETINFO
	gosub *EVENT_URL
	gosub *TAB_UPDATE
	dialog "",16,""
	if stat = 0 : stop
	localurl=refstr
	DEF_URL = "file://"+localurl
	gosub *CMD_NEW_TAB
	DEF_URL = "file://"+dir_exe+"/index.htm"
	return

*CMD_HISTORY
	DEF_URL = "about:history"
	gosub *CMD_NEW_TAB
	DEF_URL = "file://"+dir_exe+"/index.htm"
	stop

//MANAPAD

*CMD_MANAPAD
	mana="already"
	screen 3,210,280,4
	gsel 3,2
	DwmSetWindowAttribute hwnd,DWMWA_USE_IMMERSIVE_DARK_MODE,VARIABLE_CONF_WINDOW_COLOR,4
	GetWindowLong hwnd, -16
	SetWindowLong hwnd, -16, stat - $20000
	SetWindowLong hwnd, -16, stat - $80000
	GetWindowLong hwnd, -20
	SetWindowLong hwnd, -20, stat | WS_EX_LAYERED
	SetLayeredWindowAttributes hwnd, 0, 80*255/100, 2
	title VARIABLE_CONF_TEXT_ATENE_NAME
	objsize 70,70
	pos 0,0:button gosub VARIABLE_CONF_TEXT_SENDBACK,*CMD_BACK
	pos 70,0:button gosub VARIABLE_CONF_TEXT_SENDFORWARD,*CMD_FORWARD
	pos 140,0:button gosub VARIABLE_CONF_TEXT_SENDRELOAD,*CMD_RELOAD
	pos 0,70:button gosub VARIABLE_CONF_TEXT_NEWTAB,*CMD_NEW_TAB
	pos 70,70:button gosub VARIABLE_CONF_TEXT_CLONETAB,*CMD_CLONE_TAB
	pos 140,70:button gosub VARIABLE_CONF_TEXT_DELETETAB,*CMD_DEL_TAB
	pos 0,140:button gosub VARIABLE_CONF_TEXT_LOCAL,*CMD_LOCAL
	pos 70,140:button gosub VARIABLE_CONF_TEXT_ATENE_NAMEclose,*MANA_CLOSE
	pos 140,140:button gosub VARIABLE_CONF_TEXT_ATENE_CLOSE,*ISWINDOWEXIT
	objsize 140,35
	helpurl="https://"
	searchword=""
	pos 0,210:input helpurl
	pos 0,245:input searchword
	objsize 70,35
	pos 140,210:button VARIABLE_CONF_TEXT_ATENE_URL,*MANA_NAVIGATE
	pos 140,245:button VARIABLE_CONF_TEXT_ATENE_SEARCHURL,*MANA_SEARCH
	gsel 0
	return

*MANA_NAVIGATE
	DEF_URL = helpurl
	gosub *CMD_NEW_TAB
	DEF_URL = "file://"+dir_exe+"/index.htm"
	stop

*MANA_SEARCH
	DEF_URL = VARIABLE_CONF_URL_SEARCH+searchword
	gosub *CMD_NEW_TAB
	DEF_URL = "file://"+dir_exe+"/index.htm"
	stop

*MANA_CLOSE
	mana="no"
	gsel 3,-1
	stop

//FUNC

*CMD_FUNC
	funcmanager="already"
	screen 5,300,280,4
	gsel 5,2
	DwmSetWindowAttribute hwnd5,DWMWA_USE_IMMERSIVE_DARK_MODE,VARIABLE_CONF_WINDOW_COLOR,4
	GetWindowLong hwnd, -16
	SetWindowLong hwnd, -16, stat - $20000
	SetWindowLong hwnd, -16, stat - $80000
	GetWindowLong hwnd, -20
	SetWindowLong hwnd, -20, stat | WS_EX_LAYERED
	SetLayeredWindowAttributes hwnd, 0, 80*255/100, 2
	title VARIABLE_CONF_TEXT_FUNCTION_NAME
	objsize 300,40
	pos 0,0:button gosub VARIABLE_CONF_TEXT_UPDATE, *CMD_UPDATE
	pos 0,40:button gosub VARIABLE_CONF_TEXT_INICONFIG, *CMD_INICONF
	pos 0,80:button gosub "Professional Features(Include beta)", *CMD_FUNC_ADVANCED
	hButton = objinfo(stat, 2)
	pos 0,120:button gosub VARIABLE_CONF_TEXT_ISABOUT, *CMD_ABOUT
	pos 0,240:button gosub VARIABLE_CONF_TEXT_CLOSE, *CMD_FUNC_CLOSE
	DwmSetWindowAttribute hwnd,DWMWA_USE_IMMERSIVE_DARK_MODE,VARIABLE_CONF_WINDOW_COLOR,4
	gsel 0
	return

*CMD_FUNC_CLOSE
	funcmanager="no"
	gsel 5,-1
	stop

*CMD_FUNC_ADVANCED
	GetWindowRect hButton, varptr(RECT)
	TrackPopupMenu hMenu.1, $100, RECT.2, RECT.1, 0, hwnd, 0
	if stat = 0 : stop
	if stat = $10 : gosub *CMD_BACK
	if stat = $20 : gosub *CMD_FORWARD
	if stat = $30 : gosub *CMD_FUNC_CONFDEL
	if stat = $40 : gosub *CMD_FUNC_INDEXDEL
	if stat = $50 : gosub *CMD_FUNC_TASKMGR
	if stat = $60 : gosub *CMD_FUNC_EXECUTE
	if stat = $70 : dialog "This is the compatible of InternetExplorer7.\nBase : ISCompatible" : gosub *CMD_Compatible
	if stat = $80 : wvurl="edge://about" : gosub *CMD_WV_RUN
	if stat = $90 : wvurl="https://blog.goo.ne.jp/hiro239415/e/5041aec497e02427c2b123aef07977e3" : gosub *CMD_WV_RUN
	if stat = $100 : wvurl="https://www.youtube.com/@ABELLandATENE" : gosub *CMD_WV_RUN
	if stat = $110 : wvurl=VARIABLE_CONF_FAVORITE1 : gosub *CMD_WV_RUN
	if stat = $120 : wvurl=VARIABLE_CONF_FAVORITE2 : gosub *CMD_WV_RUN
	if stat = $130 : wvurl=VARIABLE_CONF_FAVORITE3 : gosub *CMD_WV_RUN
	if stat = $140 : gosub *ISDarkMode : return
	if stat = $990 : gosub *ISWindowEXIT
	DwmSetWindowAttribute hwnd,DWMWA_USE_IMMERSIVE_DARK_MODE,VARIABLE_CONF_WINDOW_COLOR,4
	gsel 0
	stop

*CMD_FUNC_CONFDEL
	dialog "conf.ini will deleted.\nCreate configuration from scratch.\nWhat language do you want?\nEnglish(Y)/Japanese(N)\n\nconf.iniの設定を新しく作ります。\n言語はどうしますか? 英語(Y)/日本語(N)", 3, "conf.ini Select - English/Japanese"
	conf_lang=stat
 	if conf_lang="6" {bcopy "conf_e.pak",""+dir_cur+"\\conf.ini"}
 	if conf_lang="7" {bcopy "conf_j.pak",""+dir_cur+"\\conf.ini"}
 	dialog "New conf.ini were created.\n\n設定が新しく作られました。"
 	gosub *Load_iniFile
	return

*CMD_FUNC_INDEXDEL
	bcopy "html.pak",""+dir_cur+"\\index.htm"
 	dialog "SUCSESS"
	return
	
*CMD_WV_RUN
	if wvurl = "empty slot" {dialog "conf.ini is empty\n\nお気に入りサイトがconf.iniに記載されていません":return}
	gsel 0
	NOW_DEF_URL = DEF_URL
	DEF_URL = wvurl
	gosub *TAB_ADD
	DEF_URL = NOW_DEF_URL
	return

//URLPUSH
*Browser_PUSH
screen 2, 300, 250, 4
gsel 2,1
DwmSetWindowAttribute hwnd,DWMWA_USE_IMMERSIVE_DARK_MODE,VARIABLE_CONF_WINDOW_COLOR,4
cls 0
x = (ginfo(20) - ginfo(10)) / 2
y = (ginfo(21) - ginfo(11)) / 2
width , , x, y
GetWindowLong hwnd, -16
SetWindowLong hwnd, -16, stat - $20000
SetWindowLong hwnd, -16, stat - $80000
GetWindowLong hwnd, -20
SetWindowLong hwnd, -20, stat | WS_EX_LAYERED
SetLayeredWindowAttributes hwnd, 0, 80*255/100, 2
title VARIABLE_CONF_TEXT_SENDURL
objsize 300,40
pos 0,0:button gosub "Chrome",*Browser_PUSH_Chrome
pos 0,40:button gosub "Edge",*Browser_PUSH_Edge
pos 0,80:button gosub "Firefox",*Browser_PUSH_Firefox
pos 0,120:button gosub "Floorp",*Browser_PUSH_Floorp
pos 0,210:button gosub VARIABLE_CONF_TEXT_CLOSE,*Browser_PUSH_EXIT
BrowserPush="use"
DwmSetWindowAttribute hwnd,DWMWA_USE_IMMERSIVE_DARK_MODE,VARIABLE_CONF_WINDOW_COLOR,4
gsel 0
stop

*Browser_PUSH_Chrome
pushbrowser="chrome"
gosub *Browser_PUSH_RUN
return

*Browser_PUSH_Edge
pushbrowser="msedge"
gosub *Browser_PUSH_RUN
return

*Browser_PUSH_Firefox
pushbrowser="firefox"
gosub *Browser_PUSH_RUN
return

*Browser_PUSH_Floorp
pushbrowser="floorp"
gosub *Browser_PUSH_RUN
return

*Browser_PUSH_RUN
if ( pTabInfo == 0 ){ return }
p1 = (GetWindowTextLengthW(hEditUrl) + 1) * 2
sdim bufTmp, p1
GetWindowText hEditUrl, varptr(bufTmp), p1
urlTmp = bufTmp
ShellExecuteW 0, "open", pushbrowser, urltmp, 0, 10
gsel 0
return

*Browser_PUSH_EXIT
gsel 2,-1
BrowserPush="unuse"
gsel 0
return

//WINDOWMANAGER

*WM_SIZE
	if iswindow_exitcode = "true" {end}
	gosub *EVENT_URL
	GetClientRect hWnd0, varptr(rc)
	if ( IsWindowVisible(hEditUrl) ){
		MoveWindow hEditUrl, 8, 0, rc(2) - 16, 20, 0
		MoveWindow hTab, 0, 20, rc(2), 24, 0
		p1 = 44
	}
	else { p1 = 0 }
	gosub *TAB_GETINFO
	if ( pTabInfo ){
		WebView2_Size dpCtrl(0), 0, p1, rc(2), rc(3)-25
	}
	gosub *WM_STBAR
	stbar_resize
	return

*WM_STBAR
	gsel 0
	clrobj
	stbar_ini
	gosub *EVENT_URL
	if ( pTabInfo == 0 ){ return }
	p1 = (GetWindowTextLengthW(hEditUrl) + 1) * 2
	sdim bufTmp, p1
	GetWindowText hEditUrl, varptr(bufTmp), p1
	STBarURL = bufTmp
	stbar_resize
	stbar_text ISName+" "+ISVersion+" | "+sysinfo(0)+" | URL : "+STBarURL
	return

*WM_CLOSE
	sendmsg hTab, TCM_GETITEMCOUNT, 0, 0
	repeat stat
		iTab = cnt : gosub *TAB_DEL
	loop
	WebView2_Release pEnv
	if ( hMenu ){ DestroyMenu hMenu }
	return

*WM_NOTIFY
	if ( lparam == 0 ){ return }
	dupptr dpHdr, lparam, 12, 4
	if ( dpHdr(0) == hTab ){
		if ( dpHdr(2) == -552 ){
			sendmsg hTab, TCM_GETCURSEL, 0, 0
			if ( stat == -1 ){ return }
			iTab = stat : gosub *TAB_GETINFO2
			if ( pTabInfo == 0 ){ return }
			ret = CCall2(dpCtrl(0), WV2Ctrl_put_IsVisible, 1, 0)
		}
		if ( dpHdr(2) == -551 ){
			gosub *TAB_SELECT
			return
		}
		if ( dpHdr(2) == -5 ){
			dim tchi, 3
			GetCursorPos varptr(tchi)
			ScreenToClient hTab, varptr(tchi)
			sendmsg hTab, TCM_HITTEST, 0, varptr(tchi)
			if ( stat == -1 ){ return }
			iTab = stat : gosub *TAB_DEL
			return
		}
	}
	return

*WM_COMMAND
	if ( lparam == 0 && (wparam >> 16) == 0 ){
		id = wparam & 0xffff
		if ( id < 0x8000 || id >= (0x8000 + length(lbCmd)) ){ return }
		gosub lbCmd(id - 0x8000)
	}
	return

//ANOTHER

*ISDarkMode
	if darkmode_change = "false" {dialog "If you put anything other than 0 in line 20 of conf.ini,\nthe dark mode will be set from the beginning.\n\nconf.iniの20行目が0以外だと、初めからダークモードになるよ",0,"Tips 豆知識":darkmode_change = "already"}
	if VARIABLE_CONF_WINDOW_COLOR = int(0) {VARIABLE_CONF_WINDOW_COLOR=int(1)}else{VARIABLE_CONF_WINDOW_COLOR=int(0)}
	DwmSetWindowAttribute hwnd0,DWMWA_USE_IMMERSIVE_DARK_MODE,VARIABLE_CONF_WINDOW_COLOR,4
	return

*CMD_FUNC_TASKMGR
	gosub *TAB_GETINFO
	if ( pTabInfo == 0 ){ return }
	ret = CCall2(dpCtrl(1), WV2_OpenTaskManagerWindow, 0)
	return
	
*CMD_FUNC_EXECUTE
	screen 6, ginfo_dispx, ginfo_dispy, 2, , , 320, 240
	title "Execute JavaScript - ISMemoria" : font "Consolas", 11 : hWnd6 = hwnd : objmode 2
	if darkmode = "1" {DwmSetWindowAttribute hwnd,DWMWA_USE_IMMERSIVE_DARK_MODE,VARIABLE_CONF_WINDOW_COLOR,4 : cls 4}
	sdim bufExec, 1024 : sdim bufRes, 1024
	pos 0, 0 : objsize ginfo_winx, 20
	button gosub "Execute Javascript", *BTN_EXEC : hBtnExec = objinfo_hwnd(stat)
	p1 = (ginfo_winy - 20) / 2 : pos 0, 20
	mesbox bufExec, ginfo_winx, p1 : hMbExec = objinfo_hwnd(stat)
	pos 0, p1 + 20
	mesbox bufRes, ginfo_winx, p1 : hMbRes = objinfo_hwnd(stat)
	oncmd gosub *WM6_SIZE,  0x0005
	oncmd gosub *WM6_CLOSE, 0x0010
	SetWindowPos hWnd6, -1, 0, 0, 0, 0, 0x63
	DwmSetWindowAttribute hwnd,DWMWA_USE_IMMERSIVE_DARK_MODE,VARIABLE_CONF_WINDOW_COLOR,4
	return

*WM6_SIZE
	GetClientRect hWnd6, varptr(rc)
	rc(3) = (rc(3) - 20) / 2
	MoveWindow hBtnExec, 0, 0, rc(2), 20, 1
	MoveWindow hMbExec, 0, 20, rc(2), rc(3), 1
	MoveWindow hMbRes, 0, rc(3) + 20, rc(2), rc(3), 1
	return

*WM6_CLOSE
	SetWindowPos hWnd6, 0, 0, 0, 0, 0, 0x83
	return 0

*BTN_EXEC
	gosub *TAB_GETINFO
	if ( pTabInfo == 0 ){ return }
	EnableWindow hBtnExec, 0
	p1 = (GetWindowTextLengthW(hMbExec) + 1) * 2
	sdim bufTmp, p1
	GetWindowTextW hMbExec, varptr(bufTmp), p1
	dupptr dp, WV2_DATA_SIZE * 16 + pTabInfo, WV2_DATA_SIZE * 4, 4
	WebView2_EventInit WV2_EVENT_EXECUTESCRIPT, 0, 0, dp
	if ( CCall2(dpCtrl(1), WV2_ExecuteScript, 2, varptr(bufTmp), dp) == 0 ){
		WebView2_EventWait dp
		if ( dp(WV2_DATA_WP) == 0 ){
			if ( WebView2_CnvWinStr(dp(WV2_DATA_LP), bufTmp) ){
				SetWindowTextA hMbRes, varptr(bufTmp)
			}
		}
	}
	EnableWindow hBtnExec, 1
	return

*syscommand
if wparam = IDM_ADD1 {gosub *CMD_ABOUT : return}
return

//Trident
*CMD_Compatible

//URL
if ( pTabInfo == 0 ){ return }
p1 = (GetWindowTextLengthW(hEditUrl) + 1) * 2
sdim bufTmp, p1
GetWindowText hEditUrl, varptr(bufTmp), p1
compatiblefasturl = "www.google.com"

//初期設定

if CompatibleStart = "no" {
CompatibleStart="use"
screen 1, 800, 350, 4
goto *Compatible2

*Compatible2
dialog "IE7 Mode will delete in 1.5.x"
gsel 1
DwmSetWindowAttribute hwnd,DWMWA_USE_IMMERSIVE_DARK_MODE,VARIABLE_CONF_WINDOW_COLOR,4
x = (ginfo(20) - ginfo(10)) / 2
y = (ginfo(21) - ginfo(11)) / 2
width , , x, y
pos 0,0
title "IE7 Compatible (ISCompatible)"
compatibleve="4.2"
compatiblebuildd="2023/10/14"
compatiblebuildn="Compatible Mode"
compatibleurl="www.google.com"
#define SetWndCenter width , , (ginfo(20)-ginfo(10))/2, (ginfo(21)-ginfo(11))/2
#define DIID_DWebBrowserEvents2 "{34A715A0-6587-11D0-924A-0020AFC7AC4D}"
#define DISPID_NAVIGATECOMPLETE2 252
#define WS_CLIPSIBLINGS     0x04000000
#define WS_CHILD            0x40000000
#define WS_VISIBLE          0x10000000
#define TCIF_TEXT               0x0001
#define TCM_FIRST               0x1300  
#define TCM_ADJUSTRECT          (TCM_FIRST + 40)
#define SW_HIDE             0
#define SW_SHOW             5
#enum BTID_BACK = 0
#enum BTID_REFRESH
#enum BTID_FORWARD
#enum BTID_HOME
#enum BTID_CLOSE
#define WM_NOTIFY                       0x004E
#define TCN_FIRST               (-550)
#define TCN_SELCHANGE           (TCN_FIRST - 1)
#module "trayicon"
#define __TRAYICONSAMPLE__
#define WM_TRAYEVENTSTART $900
#define MAXICONS 16
#uselib "Kernel32.dll"
#func GetModuleFileName "GetModuleFileNameA" nullptr,prefstr,int
#uselib "Shell32.dll"
#func ExtractIconEx "ExtractIconExA" sptr,int,nullptr,var,int
#func Shell_NotifyIcon "Shell_NotifyIconA" int,var
#uselib "user32.dll"
#func DestroyIcon "DestroyIcon" int
#deffunc DestroyTrayIcon int iconid 
dim NOTIFYICONDATA,88/4
NOTIFYICONDATA = 88, hWnd, iconid
Shell_NotifyIcon 2, NOTIFYICONDATA
if hIcon.iconid { DestroyIcon hIcon.iconid : hIcon.iconid = 0 }
return
#deffunc CreateTrayIcon str tooltip, int nIconIndex, int iconid
if hIcon.iconid { DestroyTrayIcon iconid }
ExtractIconEx icofile, nIconIndex, hIcon.iconid, 1
dim NOTIFYICONDATA,88/4
NOTIFYICONDATA = 88, hWnd_, iconid, 7, WM_TRAYEVENTSTART, hIcon.iconid
poke NOTIFYICONDATA, 4*6, tooltip
Shell_NotifyIcon 0, NOTIFYICONDATA
return
#deffunc PopupBalloonTip str balloonInfoTitle, str balloonInfo, int balloonIcon,int iconid
    dim NOTIFYICONDATA,488/4
    NOTIFYICONDATA = 488, hWnd_, iconid, $10
    poke NOTIFYICONDATA, 4*40, balloonInfo
    NOTIFYICONDATA.104 = 1000*20
    poke NOTIFYICONDATA, 4*105, balloonInfoTitle
    NOTIFYICONDATA.121 = balloonIcon
    Shell_NotifyIcon 1, NOTIFYICONDATA
return
#deffunc SetTrayIconFile str filename 
sdim icofile,1024
if filename = "" { GetModuleFileName 1024 : icofile = refstr } 
else { icofile = filename }
return 
#deffunc _init_trayicon_
mref bmscr,96: hWnd_ = bmscr.13
dim hIcon,MAXICONS : SetTrayIconFile "" : return
length
#deffunc _deinit_trayicon_ onexit
foreach hIcon : if hIcon.cnt { DestroyTrayIcon cnt } loop : return
#global
_init_trayicon_
#ifdef __TRAYICONSAMPLE__@trayicon
IE.ScriptErrorsSuppressed = false
dim ie
dim ie_event
objsize 638,24
pos 0,2:mes "URL=>"
pos 40,0:input compatibleurl
objsize 120,22
pos 680,1:button VARIABLE_CONF_TEXT_ISCOMPATIBLE_WOW,*CMD_Compatible_wow
pos 120,24:button VARIABLE_CONF_TEXT_ISCOMPATIBLE_RELOAD,*CMD_Compatible_re
pos 240,24:button VARIABLE_CONF_TEXT_ISCOMPATIBLE_FORWARD,*CMD_Compatible_go_f
pos 0,24:button VARIABLE_CONF_TEXT_ISCOMPATIBLE_BACK,*CMD_Compatible_go_b
pos 680,24:button VARIABLE_CONF_TEXT_ISCOMPATIBLE_EXIT,*CMD_Compatible_Exit
pos 0,60
axobj ie, "Shell.Explorer.1",800,350-48
num=stat
comevent ie_event, ie, "{34A715A0-6587-11D0-924A-0020AFC7AC4D}",*event
GetWindowLong hwnd, -16
SetWindowLong hwnd, -16, stat - $20000
SetWindowLong hwnd, -16, stat - $80000
goto *CMD_Compatible_start
}
*CMD_Compatible_start
compatibleurl=compatiblefasturl
gsel 1,1
CompatibleStart="use"
goto *CMD_Compatible_main

*CMD_Compatible_main
ie->"Navigate" compatibleurl
DwmSetWindowAttribute hwnd,DWMWA_USE_IMMERSIVE_DARK_MODE,VARIABLE_CONF_WINDOW_COLOR,4
gsel 0
stop

*event
gsel 1
dispid = comevdisp(ie_event)
if dispid = DISPID_NAVIGATECOMPLETE2 : gosub *OnNavigateComplete2
gsel 0
return

*OnNavigateComplete2
gsel 1
compatiblename = ie("LocationURL")
objprm 0,compatiblename
pDoc = ie("Document")
compatiblename = pDoc("Title")
delcom pDoc
title "Internet Stroller Compatible Mode - " + compatiblename
gsel 0
return

*CMD_Compatible_wow
gsel 1
if compatibleurl = "is://about" {gosub *CMD_ABOUT:stop}
if compatibleurl = "is://capture" {dialog "Not Supported [Compatible]":stop}
if compatibleurl = "is://compatible" {dialog "Not Supported [Compatible]":stop}
if compatibleurl = "is://version" {dialog textversionis + ISVersion + textversionisend, 0, ISNAME : return}
if compatibleurl = "is://webview" {dialog textwebviewimage + dirinfo(0) + textwebviewimagesec, 0, ISNAME : return}
if compatibleurl = "is://local" {dialog "",16,""
if stat = 0:stop
ie->"Navigate" refstr:stop}
if compatibleurl = "is://update" {dialog "Not Supported [Compatible]":stop}
if compatibleurl = "is://home" {ie->"Navigate" "https://abatbeliever.github.io/InternetStroller/":stop}
ie->"Navigate" compatibleurl
gsel 0
stop

*CMD_Compatible_go_f
gsel 1
ie->"GoForward"
gsel 0
stop

*CMD_Compatible_go_b
gsel 1
ie->"GoBack"
gsel 0
stop

*CMD_Compatible_re
gsel 1
ie->"Navigate" compatibleurl
gsel 0
stop

*CMD_Compatible_Exit
if Mode = "Legacy" {goto *ISWindowExit}
gsel 1,-1
CompatibleStart="unuse"
stop

*ISWindowExit
gsel 0
title "Please exit from TaskManager"
DestroyMenu hMenu.0
stbar_resize
stbar_text ISName+" "+ISVersion+" | "+sysinfo(0)+" | ISWindowExit"
if ( IsWindowVisible(hWnd6) ){SetWindowPos hWnd6, 0, 0, 0, 0, 0, 0x83}
if funcmanager = "already" {gsel 5,-1}
if ver_about = "use" {gsel 4,-1}
if mana = "already" {gsel 3,-1}
if BrowserPush = "use" {gsel 2,-1}
if CompatibleStart = "use" {gsel 1,-1}
gsel 0
if VARIABLE_CONF_ANIMATION = 1 {
sendmsg hwnd, $112, $F020
wait 50
await 50
}
iswindow_exitcode="true"
end
end
end